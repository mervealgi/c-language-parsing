
loat ->Identifier(ID)
a[100] ->Identifier(ID)
[100 ->Identifier(ID)
] ->Identifier(ID)
, ->Ayrıstırıcı(Virgul)
b[100] ->Identifier(ID)
[100 ->Identifier(ID)
] ->Identifier(ID)
, ->Ayrıstırıcı(Virgul)
c[100] ->Identifier(ID)
[100 ->Identifier(ID)
] ->Identifier(ID)
; ->Ayrıstırıcı(Noktali_virgul)
int ->Keyword(INT)
i ->Identifier(ID)
, ->Ayrıstırıcı(Virgul)
j ->Identifier(ID)
, ->Ayrıstırıcı(Virgul)
k ->Identifier(ID)
; ->Ayrıstırıcı(Noktali_virgul)
i ->Identifier(ID)
= ->Operator(ATAMA)
; ->Ayrıstırıcı(Noktali_virgul)
while ->Keyword(WHILE)
( ->Ayrıstırıcı(Parantez_ac)
i ->Identifier(ID)
< ->Operator(KUCUK)
) ->Ayrıstırıcı(Parantez_kapa)
j ->Identifier(ID)
= ->Operator(ATAMA)
; ->Ayrıstırıcı(Noktali_virgul)
while ->Keyword(WHILE)
( ->Ayrıstırıcı(Parantez_ac)
j ->Identifier(ID)
< ->Operator(KUCUK)
) ->Ayrıstırıcı(Parantez_kapa)
if ->Keyword(IF)
( ->Ayrıstırıcı(Parantez_ac)
( ->Ayrıstırıcı(Parantez_ac)
c ->Identifier(ID)
[i ->Identifier(ID)
] ->Identifier(ID)
[j ->Identifier(ID)
] ->Identifier(ID)
== ->Operator(ESIT)
) ->Ayrıstırıcı(Parantez_kapa)
) ->Ayrıstırıcı(Parantez_kapa)
c ->Identifier(ID)
[i ->Identifier(ID)
] ->Identifier(ID)
[j ->Identifier(ID)
] ->Identifier(ID)
= ->Operator(ATAMA)
; ->Ayrıstırıcı(Noktali_virgul)
k ->Identifier(ID)
= ->Operator(ATAMA)
; ->Ayrıstırıcı(Noktali_virgul)
while ->Keyword(WHILE)
( ->Ayrıstırıcı(Parantez_ac)
k ->Identifier(ID)
< ->Operator(KUCUK)
) ->Ayrıstırıcı(Parantez_kapa)
c ->Identifier(ID)
[i ->Identifier(ID)
] ->Identifier(ID)
[j ->Identifier(ID)
] ->Identifier(ID)
= ->Operator(ATAMA)
c ->Identifier(ID)
[i ->Identifier(ID)
] ->Identifier(ID)
[j ->Identifier(ID)
] ->Identifier(ID)
+ ->Operator(ARTI)
a ->Identifier(ID)
[i ->Identifier(ID)
] ->Identifier(ID)
[k ->Identifier(ID)
] ->Identifier(ID)
* ->Operator(CARPMA)
b ->Identifier(ID)
[k ->Identifier(ID)
] ->Identifier(ID)
[j ->Identifier(ID)
] ->Identifier(ID)
; ->Ayrıstırıcı(Noktali_virgul)
k ->Identifier(ID)
= ->Operator(ATAMA)
k ->Identifier(ID)
+ ->Operator(ARTI)
; ->Ayrıstırıcı(Noktali_virgul)
j ->Identifier(ID)
= ->Operator(ATAMA)
j ->Identifier(ID)
+ ->Operator(ARTI)
; ->Ayrıstırıcı(Noktali_virgul)
i ->Identifier(ID)
= ->Operator(ATAMA)
i ->Identifier(ID)
+ ->Operator(ARTI)
; ->Ayrıstırıcı(Noktali_virgul)